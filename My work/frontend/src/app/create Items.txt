<div class="container">
    <h1>Create New User</h1>
  
    <a href="#" routerLink="/data/viewItems" class="btn btn-primary">Back</a>
        
    <form [formGroup]="form" (ngSubmit)="submit()">
  
        <div class="form-group">
            <label for="itemName">Item Name:</label>
            <input 
                formControlName="itemName"
                id="itemName" 
                type="text" 
                class="form-control">
            <div *ngIf="f['itemName'].touched && f['itemName'].invalid" class="alert alert-danger">
                <div *ngIf="f['itemName'].errors && f['itemName'].errors['required']">Item Name is required.</div>
            </div>
        </div>
  
        <div class="form-group">
            <label for="itemPrice">Item Price:</label>
            <input 
                formControlName="itemPrice"
                id="itemPrice" 
                type="text" 
                class="form-control" />
            <div *ngIf="f['itemPrice'].touched && f['itemPrice'].invalid" class="alert alert-danger">
                <div *ngIf="f['itemPrice'].errors && f['itemPrice'].errors['required']">Item Price is required.</div>
            </div>
        </div>

        <div class="form-group">
            <label for="itemSpecification">Item Specification:</label>
            <textarea
                formControlName="itemSpecification"
                id="itemSpecification" 
                type="text" 
                class="form-control">
            </textarea>
            <div *ngIf="f['itemSpecification'].touched && f['itemSpecification'].invalid" class="alert alert-danger">
                <div *ngIf="f['itemSpecification'].errors && f['itemSpecification'].errors['required']">Item Specification is required.</div>
            </div>
        </div>

        <div class="form-group">
            <label for="itemStorage">Item Storage:</label>
            <input 
                formControlName="itemStorage"
                id="itemStorage" 
                type="text" 
                class="form-control" />
            <div *ngIf="f['itemStorage'].touched && f['itemStorage'].invalid" class="alert alert-danger">
                <div *ngIf="f['itemStorage'].errors && f['itemStorage'].errors['required']">Item Storage is required.</div>
            </div>
        

      
            <label for="itemColour">Item Colour</label>
            <input 
                formControlName="itemColour"
                id="itemColour" 
                type="text" 
                class="form-control" />
            <div *ngIf="f['itemColour'].touched && f['itemColour'].invalid" class="alert alert-danger">
                <div *ngIf="f['itemColour'].errors && f['itemColour'].errors['required']">Item Colour is required.</div>
            </div>
        </div>
     

        <div class="form-group">
            <label for="itemAvailability">Item Availability:</label>
            <input 
                formControlName="itemAvailability"
                id="itemAvailability" 
                type="text" 
                class="form-control" />
            <div *ngIf="f['itemAvailability'].touched && f['itemAvailability'].invalid" class="alert alert-danger">
                <div *ngIf="f['itemAvailability'].errors && f['itemAvailability'].errors['required']">Item Availability is required.</div>
            </div>
        </div>

        <div class="form-group">
            <label for="itemImages">Item Images:</label>
            <input 
                formControlName="itemImages"
                id="itemImages" 
                type="text" 
                class="form-control" />
            <div *ngIf="f['itemImages'].touched && f['itemImages'].invalid" class="alert alert-danger">
                <div *ngIf="f['itemImages'].errors && f['itemImages'].errors['required']">Item Images is required.</div>
            </div>
        </div>

        <button class="btn btn-primary" type="submit" [disabled]="!form.valid">Submit</button>
    </form>
</div>




.ts
import { Component, OnInit } from '@angular/core';
import { DataService } from '../data.service';
import { Router } from '@angular/router';
import { FormGroup, FormControl, Validators} from '@angular/forms';

@Component({
  selector: 'app-create-items',
  templateUrl: './create-items.component.html',
  styleUrls: ['./create-items.component.css']
})
export class CreateItemsComponent implements OnInit {
  form!: FormGroup;
    
  /*------------------------------------------
  --------------------------------------------
  Created constructor
  --------------------------------------------
  --------------------------------------------*/
  constructor(
    public dataService: DataService,
    private router: Router
  ) { }
    
  /**
   * Write code on Method
   *
   * @return response()
   */
  ngOnInit(): void {
    this.form = new FormGroup({

      itemName : new FormControl('', [Validators.required]),
      itemPrice: new FormControl('', Validators.required),
      itemSpecification: new FormControl('',Validators.required),
      itemStorage: new FormControl('', Validators.required),
      itemColour: new FormControl('', Validators.required),
      itemAvailability: new FormControl('', Validators.required),
      itemImages: new FormControl('',Validators.required)
    });
  }
    
  /**
   * Write code on Method
   *
   * @return response()
   */
  get f(){
    return this.form.controls;
  }
    
  /**
   * Write code on Method
   *
   * @return response()
   */
  submit(){
    console.log(this.form.value);
    this.dataService.create(this.form.value).subscribe((res:any) => {
         console.log('User created successfully!');
         this.router.navigateByUrl('/viewItems');
    })
  }
  
}

